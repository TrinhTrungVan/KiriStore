// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  isAdmin  Boolean @default(false)
  userId   String  @unique
  name     String
  imageUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  products Product[] @relation("CategoryToProduct")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Size {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  value String

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  value String

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  categoryId String   @db.ObjectId
  category   Category @relation("CategoryToProduct", fields: [categoryId], references: [id])

  name        String
  description String
  price       Float
  isFeatured  Boolean @default(false)
  isArchived  Boolean @default(false)
  inStock     Int
  sold        Int     @default(0)

  sizeId String @db.ObjectId
  size   Size   @relation(fields: [sizeId], references: [id])

  colorId String @db.ObjectId
  color   Color  @relation(fields: [colorId], references: [id])

  images     String[]
  orderItems OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  orderItems OrderItem[]

  isPaid     Boolean @default(false)
  totalPrice Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  orderId String @db.ObjectId
  order   Order  @relation(fields: [orderId], references: [id])

  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])

  quantity Int
}
